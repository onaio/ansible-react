---
- name: configure build locally
  block:
    - name: Copy environment variables file locally
      template:
        src: env.j2
        dest: "{{ react_local_app_path }}/.env"
        mode: 0644
      delegate_to: localhost
      become: false

    - name: Install Javascript requirements locally
      yarn:
        path: "{{ react_local_checkout_path }}"
        production: false
      delegate_to: localhost
      become: false

    - name: Build app locally
      become: false
      delegate_to: localhost
      environment: "{{ item.env | default(react_build_cmds_default_env) }}"
      command: "yarn {{ item.cmd | default(react_build_default_cmd) }} {{ item.args | default() }}"
      register: yarn_build_result
      args:
        chdir: "{{ item.path | default(react_local_checkout_path) }}"
      failed_when: "yarn_build_result.stderr is defined and yarn_build_result.stderr.find('error ') != -1"
      with_items: "{{ react_build_cmds }}"

    - name: Remove node_modules before compression
      block:
        - name: Remove node_modules using lerna where possible
          command: yarn lerna clean -y
          args:
            chdir: "{{ react_local_checkout_path }}"
          ignore_errors: true
          delegate_to: localhost
          become: false

        - name: remove node_modules manually
          file:
            path: "{{ react_local_checkout_path }}/node_modules"
            state: absent
          delegate_to: localhost
          become: false

    - name: Compress Build folder locally
      archive:
        path: "{{ react_local_checkout_path }}/"
        dest: "{{ react_local_checkout_path }}.tgz"
      delegate_to: localhost
      become: false

    - name: UnCompress Build folder to remote host
      unarchive:
        src: "{{ react_local_checkout_path }}.tgz"
        dest: "{{ react_checkout_path }}"
      become: false
  when: "not react_remote_js_build|bool"

- name: configure build remotely
  block:
    - name: Copy environment variables file
      template:
        src: env.j2
        dest: "{{ react_app_path }}/.env"
        mode: 0644

    - name: Install Javascript requirements
      yarn:
        path: "{{ react_checkout_path }}"
        production: false
      become: true
      become_user: "{{ react_system_user }}"

    - name: Build app remotely
      become_user: "{{ react_system_user }}"
      become: true
      environment: "{{ item.env | default(react_build_cmds_default_env) }}"
      command: "yarn {{ item.cmd | default(react_build_default_cmd) }} {{ item.args | default() }}"
      register: yarn_build_result
      args:
        chdir: "{{ item.path | default(react_checkout_path) }}"
      failed_when: "yarn_build_result.stderr is defined and yarn_build_result.stderr.find('error ') != -1"
      with_items: "{{ react_build_cmds }}"

  when: "react_remote_js_build|bool"

- name: Make the new codebase current
  file:
    src: "{{ react_checkout_path }}"
    dest: "{{ react_codebase_path }}"
    state: link
    force: true
    owner: "{{ react_system_user }}"
    group: "{{ react_system_group }}"
